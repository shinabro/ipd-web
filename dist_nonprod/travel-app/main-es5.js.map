{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","basePrice","isInternational","changes","console","log","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnChanges {\n  title = 'IPD Travel App';\n  travelDate:Date;\n  isInternational:boolean;\n  basePrice = this.isInternational ? 100 : 150;\n  numOfTravelers:number;\n  travelerName:string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.basePrice = this.isInternational ? 100 : 150;\n    console.log(this.basePrice);\n  }\n\n  getPrice() : number {\n    this.basePrice = this.isInternational ? 100 : 150;\n    return this.basePrice;\n  }\n}\n","<form>\n    <div class=\"form-group\">\n        <label for=\"travelerName\">Traveler Name</label>\n        <input type=\"text\" class=\"form-control\" name=\"travelerName\" [(ngModel)]='travelerName'>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"travelDate\">Date of Travel</label>\n        <input type=\"date\" class=\"form-control\" name=\"travelDate\" [(ngModel)]='travelDate'>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"numOfTravelers\"># of Travlers</label>\n        <input type=\"number\" class=\"form-control\" name=\"travelDate\" [(ngModel)]='numOfTravelers'>\n    </div>\n    <div class=\"form-group form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]='isInternational' name='isInternational'>\n        <label class=\"form-check-label\" for=\"exampleCheck1\">International Travel</label>\n    </div>\n</form>\n\n<div class=\"card-body\" *ngIf=\"travelerName\">\n    <h5 class=\"card-title\">Travel Itinary</h5>\n    <p class=\"card-text\">Traveler: {{travelerName}}</p>\n    <p class=\"card-text\">Travel Date: {{travelDate}}</p>\n    <p class=\"card-text\">International: {{isInternational }}</p>\n    <p class=\"card-text\">{{(numOfTravelers*getPrice()) | currency}}</p>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}